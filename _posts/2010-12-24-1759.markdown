---
layout: post
date:      2010-12-24 17:59
title:   Python parsing
categories:      python, yapps
---

In the last weeks I've been implementing a test environment for the <a href="http://launchpad.net/tarantool">key/value storage I'm nowadays working on</a>. Part of the task was to come up with a simple client-side SQL parser: the original Tarantool protocol is binary, whereas, going forward, I would like to use <a href="https://launchpad.net/randgen">Random Query Generator&nbsp;</a> and <a href="http://sysbench.sourceforge.net/">sysbench </a>for testing and benchmarks. Since I chose Python to program the test driver, the rich (erm, too rich) <a href="http://nedbatchelder.com/text/python-parsers.html">world of Python parser generators </a>was there to explore. <br /><br />I was looking for a parser that would:<ul><li>provide a BNF-like language to specify the grammar</li><li>allow me to keep the grammar separate from the code (parsers parse!)</li><li>have a minimal or at least moderate runtime</li><li>be pure python</li><li>be maintained</li></ul><lj-cut>Putting aside <a href="compilers.iecc.com/comparch/article/92-05-059">LL and LR dispute</a>, parsing performance (for some reason parsing geeks are obsessed with generation performance or the breadth of supported grammars, whereas <strong>parser</strong> performance is what really matters), C/C++ world provides you with at least two very decent solutions (Bison and Antlr). <br /><br />Not so in Python.There is more than a dozen of Python parsers, none of them matching all the criteria.<br /><br />Ugh. <br /><br />In the end I chose <a href="http://theory.stanford.edu/~amitp/yapps/">yapps2</a>, a tool that does not give best performance, and (worst of all) is <a href="http://mbreen.com/yapps2.html">no longer maintained</a>.<br />But at least the result is clean, and the runtime is moderate.<br /><br />This is how the resulting grammar looks:<br /> <div class="python" style="font-family: monospace;"><ol><li class="li1"><div class="de1"><span style="font-size: medium;">kostja@shmita:~/work/tarantool/<span class="kw3">test</span>$ cat lib/sql.<span class="me1">g</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;"><span class="kw1">import</span> sql_ast</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp;</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;"><span class="sy0">%%</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp;</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;"><span class="kw3">parser</span> sql:</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp;</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; ignore: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'<span class="es0">\\</span>s+'</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> NUM: &nbsp; &nbsp; &nbsp; &nbsp;<span class="st0">'[0-9]+'</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> ID: &nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'[a-z_]+[0-9]+'</span> </span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> STR: &nbsp; &nbsp; &nbsp; &nbsp;<span class="st0">'&quot;([^<span class="es0">\\</span>&quot;]+|<span class="es0">\\</span><span class="es0">\\</span>.)*&quot;'</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> PING: &nbsp; &nbsp; &nbsp; <span class="st0">'ping'</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> INSERT: &nbsp; &nbsp; <span class="st0">'insert'</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> UPDATE: &nbsp; &nbsp; <span class="st0">'update'</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> DELETE: &nbsp; &nbsp; <span class="st0">'delete'</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> SELECT: &nbsp; &nbsp; <span class="st0">'select'</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> INTO: &nbsp; &nbsp; &nbsp; <span class="st0">'into'</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> FROM: &nbsp; &nbsp; &nbsp; <span class="st0">'from'</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> WHERE: &nbsp; &nbsp; &nbsp;<span class="st0">'where'</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> VALUES: &nbsp; &nbsp; <span class="st0">'values'</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> SET: &nbsp; &nbsp; &nbsp; &nbsp;<span class="st0">'set'</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; <span class="kw3">token</span> END: &nbsp; &nbsp; &nbsp; &nbsp;<span class="st0">'<span class="es0">\\</span>s*$'</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp;</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule sql: &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">(</span>insert <span class="br0">{</span><span class="br0">{</span> stmt = insert <span class="br0">}</span><span class="br0">}</span> |</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; update <span class="br0">{</span><span class="br0">{</span> stmt = update <span class="br0">}</span><span class="br0">}</span> |</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; delete <span class="br0">{</span><span class="br0">{</span> stmt = delete <span class="br0">}</span><span class="br0">}</span> |</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw3">select</span> <span class="br0">{</span><span class="br0">{</span> stmt = <span class="kw3">select</span> <span class="br0">}</span><span class="br0">}</span> |</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ping <span class="br0">{</span><span class="br0">{</span> stmt = ping <span class="br0">}</span><span class="br0">}</span><span class="br0">)</span> END <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> stmt <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule insert: &nbsp; &nbsp; &nbsp;INSERT <span class="br0">[</span>INTO<span class="br0">]</span> ID VALUES value_list</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> sql_ast.<span class="me1">StatementInsert</span><span class="br0">(</span>ID, value_list<span class="br0">)</span> <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule update: &nbsp; &nbsp; &nbsp;UPDATE ID SET update_list opt_where </span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> sql_ast.<span class="me1">StatementUpdate</span><span class="br0">(</span>ID, update_list, opt_where<span class="br0">)</span> <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule delete: &nbsp; &nbsp; &nbsp;DELETE FROM ID &nbsp;opt_where</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> sql_ast.<span class="me1">StatementDelete</span><span class="br0">(</span>ID, opt_where<span class="br0">)</span> <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule <span class="kw3">select</span>: &nbsp; &nbsp; &nbsp;SELECT <span class="st0">'<span class="es0">\*</span>'</span> FROM ID opt_where</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> sql_ast.<span class="me1">StatementSelect</span><span class="br0">(</span>ID, opt_where<span class="br0">)</span> <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule ping: &nbsp; &nbsp; &nbsp; &nbsp;PING</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> sql_ast.<span class="me1">StatementPing</span><span class="br0">(</span><span class="br0">)</span> <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule predicate: &nbsp; ID <span class="st0">'='</span> constant</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> <span class="br0">(</span>ID, constant<span class="br0">)</span> <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule opt_where: &nbsp; <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> <span class="kw2">None</span> <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | WHERE predicate</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> predicate <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; rule value_list: &nbsp;<span class="st0">'<span class="es0">\(</span>'</span> <span class="br0">{</span><span class="br0">{</span> value_list = <span class="br0">[</span><span class="br0">]</span> <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">(</span>expr <span class="br0">{</span><span class="br0">{</span> value_list.<span class="me1">append</span><span class="br0">(</span>expr<span class="br0">)</span> <span class="br0">}</span><span class="br0">}</span> <span class="br0">)</span>+</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'<span class="es0">\)</span>'</span> <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> value_list <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule update_list: predicate <span class="br0">[</span><span class="br0">(</span><span class="st0">','</span> predicate<span class="br0">)</span>+<span class="br0">]</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; rule expr: &nbsp; &nbsp; &nbsp; &nbsp;constant <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> constant <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; rule constant: &nbsp; &nbsp;NUM <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> NUM <span class="br0">}</span><span class="br0">}</span> | STR <span class="br0">{</span><span class="br0">{</span> <span class="kw1">return</span> STR <span class="br0">}</span><span class="br0">}</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;"><span class="sy0">%%</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp;</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;"><span class="co1"># SQL is case-insensitive, but in yapps it's not possible to</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;"><span class="co1"># specify that a token must match in case-insensitive fashion.</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;"><span class="co1"># This is hack to add re.IGNORECASE flag to all regular</span></span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;"><span class="co1"># expressions that represent tokens in the generated grammar.</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp;</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">sqlScanner.<span class="me1">patterns</span> = <span class="kw2">map</span><span class="br0">(</span><span class="kw1">lambda</span> tup:</span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">(</span>tup<span class="br0">[</span>0<span class="br0">]</span>, <span class="kw3">re</span>.<span class="kw2">compile</span><span class="br0">(</span>tup<span class="br0">[</span>1<span class="br0">]</span>.<span class="me1">pattern</span>, <span class="kw3">re</span>.<span class="me1">IGNORECASE</span><span class="br0">)</span><span class="br0">)</span>,</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sqlScanner.<span class="me1">patterns</span><span class="br0">)</span></span></div></li> <li class="li1"><div class="de1"><span style="font-size: medium;">&nbsp;</span></div></li> <li class="li2"><div class="de2"><span style="font-size: medium;"><span class="co1"># vim: nospell syntax=off ts=4 et</span></span></div></li></ol></div></lj-cut>
